version: '3'

services:
  web:
    build: .
    command: npm run start
    ports:
      - "3001:3000"
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "81:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web





















# version: '3.8'
# services:
#   api:
#     build: .
#     environment:
#       DB_USER: ${DB_USER}
#       DB_PASS: ${DB_PASS}
#       DB_NAME: ${DB_NAME}
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       NODE_ENV: ${NODE_ENV}
#     env_file:
#       - .env
#     ports:
#       - 3000:3000
#     depends_on:
#       - db
#   db:
#     image: postgres:14-alpine
#     restart: always
#     environment:
#       DB_USER: ${DB_USER}
#       DB_PASS: ${DB_PASS}
#       POSTGRES_DB: ${DB_NAME}
#     ports:
#       - ${WWW_PORT}:5432
#     env_file:
#       - .env
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:80
#     depends_on:
#       - api
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf




# version: '3.8'
# services:
#   api:
#     build: .
#     environment:
#       POSTGRES_USER: miguel
#       POSTGRES_PASSWORD: usuario
#       POSTGRES_DB: bdapicine
#       POSTGRES_HOST: db
#       POSTGRES_PORT: 5432
#       NODE_ENV: production
#     ports:
#       - 3000:3000
#     depends_on:
#       - db
#   db:
#     image: postgres:14-alpine
#     restart: always
#     environment:
#       POSTGRES_USER: miguel
#       POSTGRES_PASSWORD: usuario
#       POSTGRES_DB: bdapicine
#     ports:
#       - 5442:5432
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:80
#     depends_on:
#       - api
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf